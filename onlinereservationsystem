import java.util.ArrayList;
import java.util.Scanner;

class User {
    String username;
    String password;

    public User(String username, String password) {
        this.username = username;
        this.password = password;
    }
}

class Reservation {
    String username;
    String reservationDetails;

    public Reservation(String username, String reservationDetails) {
        this.username = username;
        this.reservationDetails = reservationDetails;
    }
}

public class ReservationSystem {
    private static ArrayList<User> users = new ArrayList<>();
    private static ArrayList<Reservation> reservations = new ArrayList<>();
    private static User currentUser;

    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        while (true) {
            System.out.println("1. Login");
            System.out.println("2. Register");
            System.out.println("3. Exit");
            System.out.print("Choose an option: ");

            int choice = scanner.nextInt();

            switch (choice) {
                case 1:
                    login(scanner);
                    break;
                case 2:
                    register(scanner);
                    break;
                case 3:
                    System.out.println("Exiting the reservation system. Goodbye!");
                    System.exit(0);
                    break;
                default:
                    System.out.println("Invalid choice. Please try again.");
            }
        }
    }

    private static void login(Scanner scanner) {
        System.out.print("Enter your username: ");
        String username = scanner.next();
        System.out.print("Enter your password: ");
        String password = scanner.next();

        for (User user : users) {
            if (user.username.equals(username) && user.password.equals(password)) {
                currentUser = user;
                reservationMenu(scanner);
                return;
            }
        }

        System.out.println("Invalid username or password. Please try again.");
    }

    private static void register(Scanner scanner) {
        System.out.print("Enter a new username: ");
        String username = scanner.next();
        System.out.print("Enter a password: ");
        String password = scanner.next();

        User newUser = new User(username, password);
        users.add(newUser);

        System.out.println("Registration successful. You can now log in.");
    }

    private static void reservationMenu(Scanner scanner) {
        while (true) {
            System.out.println("\nReservation Menu:");
            System.out.println("1. Make a reservation");
            System.out.println("2. Cancel a reservation");
            System.out.println("3. Logout");
            System.out.print("Choose an option: ");

            int choice = scanner.nextInt();

            switch (choice) {
                case 1:
                    makeReservation(scanner);
                    break;
                case 2:
                    cancelReservation(scanner);
                    break;
                case 3:
                    currentUser = null;
                    return;
                default:
                    System.out.println("Invalid choice. Please try again.");
            }
        }
    }

    private static void makeReservation(Scanner scanner) {
        System.out.print("Enter reservation details: ");
        String reservationDetails = scanner.next();

        Reservation newReservation = new Reservation(currentUser.username, reservationDetails);
        reservations.add(newReservation);

        System.out.println("Reservation successful. Details: " + reservationDetails);
    }

    private static void cancelReservation(Scanner scanner) {
        System.out.print("Enter reservation details to cancel: ");
        String reservationDetails = scanner.next();

        for (Reservation reservation : reservations) {
            if (reservation.username.equals(currentUser.username) && reservation.reservationDetails.equals(reservationDetails)) {
                reservations.remove(reservation);
                System.out.println("Reservation canceled successfully.");
                return;
            }
        }

        System.out.println("No matching reservation found to cancel.");
    }
}
